{"version":3,"sources":["config/Firebase/context.js","config/GlobalState/AppReducer.js","config/GlobalState/GlobalState.js","components/post/Post/CommentButton.jsx","components/post/Post/LikeButton.jsx","components/post/Post/PostBody.jsx","components/post/Post/DeletePost.jsx","components/post/Post/PostMenuAction.jsx","components/post/Post/UserAvatar.jsx","components/post/Posts.jsx","components/post/UploadPost/ImagesUpload.jsx","components/post/UploadPost/ImagePreview.jsx","components/post/UploadPost/EmojiPicker.jsx","components/post/UploadPost/GifPicker.jsx","components/post/UploadPost/GifPreview.jsx","components/post/UploadPost/SnackBarAlert.jsx","components/post/UploadPost.jsx","config/Session/context.js","config/Session/withAuthentication.js","config/Session/withAuthorization.js","constants/routes.js","views/Home.jsx","components/post/Comment/DeleteComment.jsx","components/post/Comment/CommentMenuAction.jsx","components/post/DisplayReply.jsx","components/post/SinglePost.jsx","views/Post.jsx","components/profile/PrivateMessage.jsx","components/profile/EditProfile.jsx","components/profile/Follow.jsx","components/profile/Banner.jsx","views/User.jsx","components/auth/SignOut.jsx","components/layouts/Search.jsx","helper/function.js","components/layouts/NavigationAuth.jsx","components/layouts/NavigationNonAuth.jsx","components/layouts/Navigation.jsx","components/auth/SignUpForm.jsx","views/SignUp.jsx","components/auth/SignInForm.jsx","views/SignIn.jsx","views/Notifications.jsx","components/privateMessages/ListPrivateMessages.jsx","components/privateMessages/SubmitMessage.jsx","components/privateMessages/ListMessage.jsx","views/PrivateMessages.jsx","App.js","config/Firebase/Firebase.js","config/Firebase/index.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","state","action","type","data","post","posts","payload","user","authenticated","credentials","loading","notifications","likes","initialState","ui","errors","GlobalContext","children","useReducer","AppReducer","dispatch","useEffect","listener","auth","onAuthStateChanged","userId","a","firestore","collection","where","get","forEach","userName","orderBy","onSnapshot","querySnapshot","empty","notifsList","notification","notif","id","push","getUser","uid","Provider","value","setPosts","setLikes","setPost","commentCount","postId","userImage","displayedName","useState","open","setOpen","replyText","setreplyText","uploadLoading","setUploadLoading","handleClose","handleComment","postRef","doc","getPost","getPostUserName","add","body","createdAt","Date","toISOString","postImg","commentId","update","FieldValue","increment","set","read","recipient","sender","className","onClick","IconButton","aria-label","size","SvgIcon","d","Typography","variant","component","Dialog","onClose","fullWidth","DialogContent","Box","display","alignItems","Avatar","alt","src","TextField","placeholder","onChange","e","target","multiline","DialogActions","Button","disabled","likeCount","useContext","result","getLikes","handleLike","likeId","handleUnlike","limit","likeDocument","docs","delete","find","like","PostBody","gif","componentDecorator","href","text","key","rel","options","noWrapper","length","map","style","backgroundImage","hideDownload","hideZoom","small","large","width","onGifClick","preventDefault","window","url","deletePost","getImgs","exists","img","storage","refFromURL","ref","getComments","startIcon","maxWidth","DialogTitle","DialogContentText","PostMenuAction","postUsername","anchorEl","setAnchorEl","event","handleClick","Menu","MenuItem","UserAvatar","mr","to","singleUserPosts","dayjs","extend","relativeTime","listPostToDisplay","followingRef","listFollowing","getPosts","fromNow","justifyContent","CircularProgress","ImagesUpload","chosenGif","handleUploadFile","multiple","accept","hidden","htmlFor","ImagePreview","uploadedImg","setUploadedImg","path","URL","createObjectURL","uploadedImgCopy","index","indexOf","splice","removeUploadedFile","EmojiPicker","setChosenEmoji","Boolean","undefined","aria-describedby","currentTarget","Popover","anchorOrigin","vertical","horizontal","transformOrigin","onSelect","emojiObject","native","theme","title","emoji","GifPickerDisplay","setChosenGif","apiKey","process","poweredByGiphy","imageBackgroundColor","searchFormClassName","wrapperClassName","masonryConfig","columns","imageWidth","gutter","listWrapperClassName","gifListHeight","GifPreview","SnackBarAlert","tooManyFiles","setTooManyFiles","handleCloseSnackBar","reason","Alert","elevation","Snackbar","autoHideDuration","severity","postText","setPostText","selectionStart","setSelectionStart","chosenEmoji","uploadPost","startPosition","substring","endPosition","onSubmit","Promise","all","image","fileExtension","name","split","pop","randomName","uuidv4","put","then","i","getDownloadURL","downloadURL","catch","err","console","log","handleChange","onKeyUp","which","handleKeyUp","files","imgFile","prevState","GifPicker","AuthUserContext","withAuthentication","authUser","setAuthUser","withAuthorization","condition","compose","withRouter","history","CommentMenuAction","commentUsername","comments","setComments","commentData","comment","Object","entries","mt","format","match","params","roomOne","roomTwo","doesRoomOneExist","doesRoomTwoExist","availableUsers","lastMessage","roomKey","EditProfile","profileName","setProfileName","bio","setBio","location","setLocation","website","setWebsite","userImagePreview","setUserImagePreview","setUserImage","userBannerPreview","setUserBannerPreview","bannerImage","setBannerImage","userBanner","updateProfile","uploadProfilePicURL","uploadBannerURL","uploadTask","displayedName_lowercase","toLowerCase","backgroundPosition","backgroundSize","backgroundRepeat","label","Follow","loggedUser","isFollowing","setIsFollowing","followingText","setFollowingText","includes","getFollowing","followUser","arrayUnion","following","followers","unFollowUser","arrayRemove","onMouseEnter","onMouseLeave","setUser","isUserProfile","setIsUserProfile","keys","constructor","flexWrap","fontSize","color","doSignOut","search","setSearch","searchResult","setSearchResult","isFocus","setIsFocus","debouncedSearchTerm","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","wrapperRef","useRef","searchUser","searchUserName","userResult","startAt","endAt","res","document","addEventListener","handleFocus","removeEventListener","current","contains","InputProps","startAdornment","InputAdornment","position","onFocus","NavigationAuth","notificationsIcon","filter","not","Badge","badgeContent","exact","activeClassName","NavigationNonAuth","Navigation","INITIAL_STATE","username","email","passwordOne","passwordTwo","error","signUpState","setSignUpState","setLoading","doCreateUserWithEmailAndPassword","uploadUser","message","userName_lowercase","isInvalid","SignUp","redirect","setRedirect","password","signInState","setSignInState","doSignInWithEmailAndPassword","SignIn","userProfils","setUserProfils","u","handleMouseEnter","notifId","isRead","verb","getUserImg","userImg","ListPrivateMessages","loggedUserId","roomOpen","setRoomOpen","rooms","setRooms","listUsers","setListUsers","roomsArr","element","getRooms","room","roomUserId","ml","SubmitMessage","roomUserNotLogged","setMessage","handleSubmitMessage","content","contentImg","recipientId","senderId","handleSubmit","onBlur","onKeyPress","handleKeyPress","ListMessage","listMessages","setListMessages","ScrollToBottom","elementRef","scrollIntoView","messages","messagesArr","profilePicture","userLink","classNameMsg","classNameImg","setRoomUserNotLogged","roomId","Container","Home","User","Post","Notifications","PrivateMessages","render","config","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","app","initializeApp","this","ReactDOM","Fragment","getElementById"],"mappings":"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","file":"static/js/main.43c97dac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = (Component) => (props) => (\r\n    <FirebaseContext.Consumer>{(firebase) => <Component {...props} firebase={firebase} />}</FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case \"SET_POSTS\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    post: {},\r\n                    posts: action.payload,\r\n                },\r\n            };\r\n        case \"SET_POST\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    ...state.data,\r\n                    post: action.payload,\r\n                },\r\n            };\r\n        case \"SET_USER\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    authenticated: true,\r\n                    credentials: { ...action.payload },\r\n                    loading: false,\r\n                },\r\n            };\r\n        case \"SET_NOTIFICATION\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    notifications: action.payload,\r\n                },\r\n            };\r\n        case \"LOGOUT_USER\":\r\n            return {\r\n                ...state,\r\n                data: {\r\n                    posts: [],\r\n                    post: { ...state.data.post },\r\n                },\r\n                user: {\r\n                    authenticated: false,\r\n                    credentials: {},\r\n                    notifications: [],\r\n                    likes: [],\r\n                },\r\n            };\r\n        case \"LIKE_POST\":\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    likes: [...action.payload],\r\n                },\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport { withFirebase } from \"../Firebase/context\";\r\n\r\nconst initialState = {\r\n    data: {\r\n        posts: [],\r\n        post: {},\r\n    },\r\n    user: {\r\n        authenticated: false,\r\n        credentials: {},\r\n        likes: [],\r\n        notifications: [],\r\n        loading: true,\r\n    },\r\n    ui: {\r\n        loading: false,\r\n        errors: null,\r\n    },\r\n};\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n// Provider component\r\nconst GlobalProvider = ({ firebase, children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    useEffect(() => {\r\n        let listener;\r\n        firebase.auth.onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const getUser = async (userId) => {\r\n                    const result = await firebase.firestore.collection(\"users\").where(\"userId\", \"==\", userId).get();\r\n                    result.forEach((user) => {\r\n                        listener = firebase.firestore\r\n                            .collection(\"notifications\")\r\n                            .where(\"recipient\", \"==\", user.data().userName)\r\n                            .orderBy(\"createdAt\", \"desc\")\r\n                            .onSnapshot((querySnapshot) => {\r\n                                if (querySnapshot.empty) {\r\n                                    dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        payload: null,\r\n                                    });\r\n                                } else {\r\n                                    let notifsList = [];\r\n                                    querySnapshot.forEach((notification) => {\r\n                                        let notif = notification.data();\r\n                                        notif.id = notification.id;\r\n                                        notifsList.push(notif);\r\n                                    });\r\n                                    dispatch({\r\n                                        type: \"SET_NOTIFICATION\",\r\n                                        payload: notifsList,\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                        dispatch({\r\n                            type: \"SET_USER\",\r\n                            payload: user.data(),\r\n                        });\r\n                    });\r\n                };\r\n                getUser(user.uid);\r\n            } else {\r\n                if (typeof listener === \"function\") {\r\n                    listener();\r\n                }\r\n                dispatch({\r\n                    type: \"LOGOUT_USER\",\r\n                });\r\n            }\r\n        });\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const setPosts = (posts) => {\r\n        dispatch({\r\n            type: \"SET_POSTS\",\r\n            payload: posts,\r\n        });\r\n    };\r\n    const setPost = (post) => {\r\n        dispatch({\r\n            type: \"SET_POST\",\r\n            payload: post,\r\n        });\r\n    };\r\n\r\n    const setLikes = (likes) => {\r\n        dispatch({\r\n            type: \"LIKE_POST\",\r\n            payload: likes,\r\n        });\r\n    };\r\n\r\n    return <GlobalContext.Provider value={{ state, setPosts, setLikes, setPost }}>{children}</GlobalContext.Provider>;\r\n};\r\n\r\nexport default withFirebase(GlobalProvider);\r\n","import React, { useState } from \"react\";\r\n\r\n/* Material UI */\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n//context\r\nimport { withFirebase } from \"./../../../config/Firebase/context\";\r\n\r\n//Mui stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\n\r\nconst CommentButton = ({ firebase, commentCount, postId, userName, userImage, displayedName }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [replyText, setreplyText] = useState(\"\");\r\n    const [uploadLoading, setUploadLoading] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setreplyText(\"\");\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleComment = async () => {\r\n        setUploadLoading(true);\r\n        const postRef = firebase.firestore.collection(\"posts\").doc(postId);\r\n\r\n        const getPost = await postRef.get();\r\n        const getPostUserName = getPost.data().userName;\r\n\r\n        const querySnapshot = await firebase.firestore.collection(\"comments\").add({\r\n            body: replyText,\r\n            createdAt: new Date().toISOString(),\r\n            postId,\r\n            userName,\r\n            userImage,\r\n            displayedName,\r\n            postImg: [],\r\n        });\r\n\r\n        const commentId = querySnapshot.id;\r\n\r\n        await postRef.update({ commentCount: firebase.FieldValue.increment(1) });\r\n\r\n        if (userName !== getPostUserName) {\r\n            await firebase.firestore.collection(\"notifications\").doc(commentId).set({\r\n                createdAt: new Date().toISOString(),\r\n                postId,\r\n                read: false,\r\n                recipient: getPostUserName,\r\n                sender: userName,\r\n                type: \"comment\",\r\n            });\r\n        }\r\n        setUploadLoading(false);\r\n        handleClose();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"comment-button-container\" onClick={handleOpen}>\r\n                <IconButton aria-label=\"like\" size=\"small\">\r\n                    <SvgIcon>\r\n                        <path d=\"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\"></path>\r\n                    </SvgIcon>\r\n                </IconButton>\r\n                {commentCount > 0 ? (\r\n                    <Typography variant=\"body1\" component=\"span\">\r\n                        {commentCount}\r\n                    </Typography>\r\n                ) : null}\r\n            </div>\r\n            <Dialog open={open} onClose={handleClose} className={`add-reply dialogbox ${uploadLoading ? \"uploading-reply\" : \"\"}`} fullWidth={true}>\r\n                <DialogContent>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                        <Avatar alt={userName} src={userImage} className=\"avatar\" />\r\n                        <TextField\r\n                            type=\"text\"\r\n                            placeholder=\"Post your reply\"\r\n                            onChange={(e) => setreplyText(e.target.value)}\r\n                            value={replyText}\r\n                            multiline\r\n                            className=\"text-field\"\r\n                        />\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {!uploadLoading ? (\r\n                        <Button className=\"submit-button\" disabled={!replyText && true} onClick={handleComment}>\r\n                            Reply\r\n                        </Button>\r\n                    ) : null}\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(CommentButton);\r\n","import React, { useEffect, useContext } from \"react\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../../config/Firebase/context\";\r\nimport { GlobalContext } from \"../../../config/GlobalState/GlobalState\";\r\n\r\n/* Material UI */\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport LikedPost from \"@material-ui/icons/Favorite\";\r\nimport NotLikedPost from \"@material-ui/icons/FavoriteBorder\";\r\n\r\nconst LikeButton = ({ firebase, postId, userName, likeCount }) => {\r\n    const { state, setLikes } = useContext(GlobalContext);\r\n\r\n    const {\r\n        user: { likes },\r\n    } = state;\r\n\r\n    useEffect(() => {\r\n        const getLikes = async () => {\r\n            const result = await firebase.firestore.collection(\"likes\").get();\r\n\r\n            const likes = [];\r\n            result.forEach((doc) => {\r\n                likes.push(doc.data());\r\n            });\r\n            setLikes(likes);\r\n        };\r\n\r\n        getLikes();\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [likeCount]);\r\n\r\n    const likedPost = () => {\r\n        if (likes && likes.find((like) => like.postId === postId && like.userName === userName)) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const handleLike = async (postId) => {\r\n        const postRef = firebase.firestore.collection(\"posts\").doc(postId);\r\n\r\n        const getPost = await postRef.get();\r\n        const getPostUserName = getPost.data().userName;\r\n\r\n        const querySnapshot = await firebase.firestore.collection(\"likes\").add({\r\n            postId,\r\n            userName,\r\n        });\r\n\r\n        const likeId = querySnapshot.id;\r\n\r\n        await postRef.update({ likeCount: firebase.FieldValue.increment(1) });\r\n\r\n        if (userName !== getPostUserName) {\r\n            await firebase.firestore.collection(\"notifications\").doc(likeId).set({\r\n                createdAt: new Date().toISOString(),\r\n                postId,\r\n                read: false,\r\n                recipient: getPostUserName,\r\n                sender: userName,\r\n                type: \"like\",\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleUnlike = async (postId) => {\r\n        const postRef = firebase.firestore.collection(\"posts\").doc(postId);\r\n\r\n        const getPost = await postRef.get();\r\n        const getPostUserName = getPost.data().userName;\r\n\r\n        const likeDocument = await firebase.firestore\r\n            .collection(\"likes\")\r\n            .where(\"userName\", \"==\", userName)\r\n            .where(\"postId\", \"==\", postId)\r\n            .limit(1)\r\n            .get();\r\n        const likeId = likeDocument.docs[0].id;\r\n\r\n        await firebase.firestore.collection(\"likes\").doc(`${likeId}`).delete();\r\n\r\n        await postRef.update({ likeCount: firebase.FieldValue.increment(-1) });\r\n\r\n        if (userName !== getPostUserName) {\r\n            await firebase.firestore.collection(\"notifications\").doc(likeId).delete();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {likedPost() ? (\r\n                <div className=\"like-button-container liked-post\" onClick={() => handleUnlike(postId)}>\r\n                    <IconButton aria-label=\"like\" size=\"small\">\r\n                        <LikedPost />\r\n                    </IconButton>\r\n                    {likeCount > 0 ? (\r\n                        <Typography variant=\"body2\" component=\"span\" className=\"like-count\">\r\n                            {likeCount}\r\n                        </Typography>\r\n                    ) : null}\r\n                </div>\r\n            ) : (\r\n                <div className=\"like-button-container\" onClick={() => handleLike(postId)}>\r\n                    <IconButton aria-label=\"like\" size=\"small\">\r\n                        <NotLikedPost />\r\n                    </IconButton>\r\n                    {likeCount > 0 ? (\r\n                        <Typography variant=\"body2\" component=\"span\" className=\"like-count\">\r\n                            {likeCount}\r\n                        </Typography>\r\n                    ) : null}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(LikeButton);\r\n","import React from \"react\";\r\nimport ModalImage from \"react-modal-image\";\r\n\r\nimport { Gif } from \"@giphy/react-components\";\r\n\r\nimport Twemoji from \"react-twemoji\";\r\nimport Linkify from \"react-linkify\";\r\n\r\n/* Material UI */\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const PostBody = ({ body, postImg, gif }) => {\r\n    const componentDecorator = (href, text, key) => (\r\n        <a href={href} key={key} target=\"_blank\" rel=\"noopener noreferrer\" className=\"post-link\">\r\n            {text}\r\n        </a>\r\n    );\r\n\r\n    return (\r\n        <Box className=\"post-body\">\r\n            {body ? (\r\n                <Linkify componentDecorator={componentDecorator}>\r\n                    <Twemoji options={{ className: \"twemoji\" }} noWrapper={true}>\r\n                        <Typography variant=\"body1\">{body}</Typography>\r\n                    </Twemoji>\r\n                </Linkify>\r\n            ) : null}\r\n\r\n            {postImg.length > 0 ? (\r\n                <div className=\"post-img-container\">\r\n                    {postImg.map((postImg, key) => {\r\n                        return (\r\n                            <div className=\"post-img\" key={key} style={{ backgroundImage: `url(${postImg})` }}>\r\n                                <ModalImage hideDownload={true} hideZoom={true} small={postImg} large={postImg} />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : null}\r\n            {gif ? (\r\n                <Gif\r\n                    gif={gif}\r\n                    width={500}\r\n                    onGifClick={(gif, e) => {\r\n                        e.preventDefault();\r\n                        window.open(gif.url, \"_blank\");\r\n                    }}\r\n                />\r\n            ) : null}\r\n        </Box>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../../config/Firebase/context\";\r\n\r\n//Mui stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\n// Icons\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\n\r\nconst DeletePost = ({ firebase, postId }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const { firestore } = firebase;\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const deletePost = async () => {\r\n        // Delete IMGs\r\n        const getImgs = await firestore.collection(\"posts\").doc(postId).get();\r\n        if (getImgs.exists) {\r\n            getImgs.data().postImg.map((img) => {\r\n                const storageImg = firebase.storage.refFromURL(img);\r\n                return storageImg.delete();\r\n            });\r\n        }\r\n\r\n        // Delete Likes\r\n        const getLikes = await firestore.collection(\"likes\").where(\"postId\", \"==\", postId).get();\r\n        if (getLikes.exists) {\r\n            getLikes.forEach(function (doc) {\r\n                doc.ref.delete();\r\n            });\r\n        }\r\n\r\n        // Delete Comments\r\n        const getComments = await firestore.collection(\"comments\").where(\"postId\", \"==\", postId).get();\r\n        if (getComments.exists) {\r\n            getComments.forEach(function (doc) {\r\n                doc.ref.delete();\r\n            });\r\n        }\r\n\r\n        // Delete post\r\n        await firestore.collection(\"posts\").doc(postId).delete();\r\n    };\r\n    return (\r\n        <>\r\n            <Button onClick={handleOpen} startIcon={<DeleteOutline />}>\r\n                Delete\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} className=\"dialogbox\" maxWidth=\"xs\">\r\n                <DialogTitle>Delete post?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        This can’t be undone and it will be removed from your profile, the timeline of any accounts that follow you, and from search\r\n                        results.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions className=\"delete-action\">\r\n                    <Button onClick={handleClose} className=\"btn cancel\">\r\n                        cancel\r\n                    </Button>\r\n                    <Button onClick={deletePost} className=\"btn delete\">\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(DeletePost);\r\n","import React, { useContext, useState } from \"react\";\r\n\r\n//Components\r\nimport DeletePost from \"./DeletePost\";\r\n\r\n//context\r\nimport { GlobalContext } from \"./../../../config/GlobalState/GlobalState\";\r\n\r\n// Material UI\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n//Icons\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nexport const PostMenuAction = ({ postId, postUsername }) => {\r\n    const { state } = useContext(GlobalContext);\r\n\r\n    const {\r\n        user: {\r\n            credentials: { userName },\r\n            authenticated,\r\n        },\r\n    } = state;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event, postId) => {\r\n        setOpen(postId);\r\n        setAnchorEl(event.target);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(null);\r\n        setAnchorEl(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {authenticated && postUsername === userName ? (\r\n                <>\r\n                    <IconButton\r\n                        onClick={(e) => {\r\n                            handleClick(e, postId);\r\n                        }}\r\n                        className=\"post-toggle-menu\"\r\n                        size=\"small\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                    <Menu className=\"menu-toggled\" anchorEl={anchorEl} open={open === postId} onClose={handleClose}>\r\n                        <MenuItem className=\"menu-item menu-item-delete\">\r\n                            <DeletePost postId={postId} />\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nexport const UserAvatar = ({ userName, userImage }) => {\r\n    return (\r\n        <Box mr={2} className=\"user-info\">\r\n            <Link to={`/user/${userName}`}>\r\n                <Avatar alt={userName} src={userImage} className=\"avatar\" />\r\n            </Link>\r\n        </Box>\r\n    );\r\n};\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\nimport { GlobalContext } from \"../../config/GlobalState/GlobalState\";\r\n\r\n//Components\r\nimport CommentButton from \"./Post/CommentButton\";\r\nimport LikeButton from \"./Post/LikeButton\";\r\nimport { PostBody } from \"./Post/PostBody\";\r\nimport { PostMenuAction } from \"./Post/PostMenuAction\";\r\nimport { UserAvatar } from \"./Post/UserAvatar\";\r\n\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Posts = ({ firebase, singleUserPosts }) => {\r\n    const { state, setPosts } = useContext(GlobalContext);\r\n    const { firestore } = firebase;\r\n\r\n    const {\r\n        data: { posts },\r\n        user: {\r\n            credentials: { userName, userImage, displayedName },\r\n        },\r\n    } = state;\r\n\r\n    dayjs.extend(relativeTime);\r\n\r\n    useEffect(() => {\r\n        if (singleUserPosts) {\r\n            const result = firestore\r\n                .collection(\"posts\")\r\n                .where(\"userName\", \"==\", singleUserPosts)\r\n                .orderBy(\"createdAt\", \"desc\")\r\n                .onSnapshot((querySnapshot) => {\r\n                    const posts = [];\r\n                    querySnapshot.forEach((doc) => {\r\n                        let post = doc.data();\r\n                        post.id = doc.id;\r\n                        posts.push(post);\r\n                    });\r\n                    setPosts(posts);\r\n                });\r\n            return () => {\r\n                setPosts([]);\r\n                result();\r\n            };\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [singleUserPosts]);\r\n\r\n    useEffect(() => {\r\n        if (userName && !singleUserPosts) {\r\n            let listPostToDisplay = [userName];\r\n            let result;\r\n\r\n            const getPosts = async () => {\r\n                const followingRef = await firestore.collection(\"following\").doc(userName).get();\r\n                if (followingRef.exists) {\r\n                    listPostToDisplay = [...listPostToDisplay, ...followingRef.data().listFollowing];\r\n                }\r\n\r\n                result = firestore\r\n                    .collection(\"posts\")\r\n                    .where(\"userName\", \"in\", listPostToDisplay)\r\n                    .orderBy(\"createdAt\", \"desc\")\r\n                    .onSnapshot((querySnapshot) => {\r\n                        const posts = [];\r\n                        querySnapshot.forEach((doc) => {\r\n                            let post = doc.data();\r\n                            post.id = doc.id;\r\n                            posts.push(post);\r\n                        });\r\n                        setPosts(posts);\r\n                    });\r\n            };\r\n\r\n            getPosts();\r\n\r\n            return () => {\r\n                setPosts([]);\r\n                if (typeof result === \"function\") {\r\n                    result();\r\n                }\r\n            };\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [userName]);\r\n\r\n    return (\r\n        <>\r\n            {posts && posts.length > 0 ? (\r\n                <>\r\n                    {posts.map((post) => {\r\n                        return (\r\n                            <Box width={1} display=\"flex\" alignItems=\"flex-start\" className=\"post-info\" key={post.id}>\r\n                                <Link className=\"post-global-link\" to={`/${userName}/post/${post.id}`}></Link>\r\n                                <UserAvatar userImage={post.userImage} userName={post.userName} />\r\n                                <Box width={1}>\r\n                                    <Box display=\"flex\" alignItems=\"baseline\">\r\n                                        <Link to={`/user/${post.userName}`} className=\"post-user-link\">\r\n                                            <Typography variant=\"h6\" component=\"span\" className=\"post-displayed-name\">\r\n                                                {post.displayedName}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" component=\"span\" className=\"post-username\">\r\n                                                @{post.userName} <span className=\"spacer\"> · </span>\r\n                                            </Typography>\r\n                                        </Link>\r\n                                        <Typography variant=\"body2\" component=\"p\" className=\"post-date\">\r\n                                            {dayjs(post.createdAt).fromNow(true)}\r\n                                        </Typography>\r\n                                        <PostMenuAction postUsername={post.userName} postId={post.id} />\r\n                                    </Box>\r\n                                    <PostBody body={post.body} postImg={post.postImg} gif={post.gif} />\r\n                                    <Box display=\"flex\" alignItems=\"center\" className=\"post-actions\">\r\n                                        <CommentButton\r\n                                            displayedName={displayedName}\r\n                                            commentCount={post.commentCount}\r\n                                            postId={post.id}\r\n                                            userName={userName}\r\n                                            userImage={userImage}\r\n                                        />\r\n                                        <LikeButton postId={post.id} userName={userName} likeCount={post.likeCount} />\r\n                                    </Box>\r\n                                </Box>\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </>\r\n            ) : (\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <CircularProgress size={30} />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(Posts);\r\n","import React from \"react\";\r\n\r\n/* Material UI */\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n/* Material UI Icons */\r\nimport CropOriginalOutlinedIcon from \"@material-ui/icons/CropOriginalOutlined\";\r\n\r\nexport const ImagesUpload = ({ chosenGif, handleUploadFile, multiple }) => {\r\n    return (\r\n        <>\r\n            <input\r\n                accept=\"image/jpeg,image/png,image/webp,image/gif,video/mp4,video/quicktime,video/webm\"\r\n                hidden\r\n                id=\"icon-button-file\"\r\n                multiple={multiple}\r\n                type=\"file\"\r\n                onChange={handleUploadFile}\r\n                disabled={chosenGif !== null}\r\n            />\r\n            <label htmlFor=\"icon-button-file\">\r\n                <IconButton className=\"upload-img\" aria-label=\"upload image\" component=\"span\" disabled={chosenGif !== null}>\r\n                    <CropOriginalOutlinedIcon />\r\n                </IconButton>\r\n            </label>\r\n        </>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n/* Material UI */\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n/* Material UI Icons */\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nexport const ImagePreview = ({ uploadedImg, setUploadedImg }) => {\r\n    const removeUploadedFile = (path) => {\r\n        const uploadedImgCopy = [...uploadedImg];\r\n        const index = uploadedImgCopy.indexOf(path);\r\n        if (index > -1) uploadedImgCopy.splice(index, 1);\r\n\r\n        return setUploadedImg(uploadedImgCopy);\r\n    };\r\n\r\n    return (\r\n        <div className=\"preview-img-container\">\r\n            {uploadedImg.map((path, key) => {\r\n                return (\r\n                    <div className=\"preview-img\" key={key} style={{ backgroundImage: `url(${URL.createObjectURL(path)})` }}>\r\n                        <IconButton\r\n                            className=\"delete-img-post\"\r\n                            onClick={() => removeUploadedFile(path)}\r\n                            aria-label=\"delete picture\"\r\n                            component=\"button\"\r\n                        >\r\n                            <CancelIcon />\r\n                        </IconButton>\r\n                        <img src={URL.createObjectURL(path)} alt=\"\" />\r\n                    </div>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\n/* Material UI */\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n/* Icon */\r\nimport SentimentSatisfiedOutlinedIcon from \"@material-ui/icons/SentimentSatisfiedOutlined\";\r\n\r\nconst EmojiPicker = ({ setChosenEmoji }) => {\r\n    const onEmojiClick = (emojiObject) => {\r\n        setChosenEmoji(emojiObject.native);\r\n    };\r\n\r\n    // POPOVER\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"add-emoji\" : undefined;\r\n\r\n    return (\r\n        <>\r\n            <IconButton aria-describedby={id} onClick={handleClick} className=\"add-smiley\">\r\n                <SentimentSatisfiedOutlinedIcon />\r\n            </IconButton>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"left\",\r\n                }}\r\n            >\r\n                <Picker set=\"twitter\" onSelect={onEmojiClick} theme=\"dark\" title=\"\" emoji=\"\" />\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import React, { useState } from \"react\";\r\n\r\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\r\n\r\n/* Material UI */\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\n/* Icon */\r\nimport GifIcon from \"@material-ui/icons/Gif\";\r\n\r\nconst GifPickerDisplay = ({ uploadedImg, setChosenGif }) => {\r\n    // POPOVER\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"add-gif\" : undefined;\r\n\r\n    return (\r\n        <>\r\n            <IconButton aria-describedby={id} onClick={handleClick} className=\"add-gif-button\" disabled={uploadedImg.length > 0}>\r\n                <GifIcon />\r\n            </IconButton>\r\n            <Popover id={id} open={open} anchorEl={anchorEl} onClose={handleClose}>\r\n                <ReactGiphySearchbox\r\n                    apiKey={process.env.REACT_APP_GIPHY_KEY}\r\n                    onSelect={(gif) => {\r\n                        setChosenGif(gif);\r\n                        handleClose();\r\n                    }}\r\n                    poweredByGiphy={false}\r\n                    imageBackgroundColor=\"#15202b\"\r\n                    searchFormClassName=\"search-gif\"\r\n                    wrapperClassName=\"add-gif-wrapper\"\r\n                    masonryConfig={[{ columns: 3, imageWidth: 200, gutter: 6 }]}\r\n                    listWrapperClassName=\"list-gif-wrapper\"\r\n                    gifListHeight={600}\r\n                />\r\n            </Popover>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifPickerDisplay;\r\n","import React from \"react\";\r\n\r\nimport { Gif } from \"@giphy/react-components\";\r\n\r\n/* Material UI */\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n/* Material UI Icons */\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nexport const GifPreview = ({ setChosenGif, chosenGif }) => {\r\n    return (\r\n        <div className=\"preview-gif-container\">\r\n            <div className=\"preview-gif\">\r\n                <IconButton className=\"delete-gif-post\" onClick={() => setChosenGif(null)} component=\"button\">\r\n                    <CancelIcon />\r\n                </IconButton>\r\n                {<Gif gif={chosenGif} width={500} />}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n/* Material UI */\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nexport const SnackBarAlert = ({ tooManyFiles, setTooManyFiles }) => {\r\n    const handleCloseSnackBar = (event, reason) => {\r\n        if (reason === \"clickaway\") {\r\n            return;\r\n        }\r\n\r\n        setTooManyFiles(false);\r\n    };\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    };\r\n\r\n    return (\r\n        <Snackbar open={tooManyFiles} autoHideDuration={6000} onClose={handleCloseSnackBar}>\r\n            <Alert onClose={handleCloseSnackBar} severity=\"error\">\r\n                No more than 4 photos\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n};\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n/* Components */\r\nimport { ImagesUpload } from \"./UploadPost/ImagesUpload\";\r\nimport { ImagePreview } from \"./UploadPost/ImagePreview\";\r\nimport EmojiPicker from \"./UploadPost/EmojiPicker\";\r\nimport GifPicker from \"./UploadPost/GifPicker\";\r\nimport { GifPreview } from \"./UploadPost/GifPreview\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\nimport { GlobalContext } from \"../../config/GlobalState/GlobalState\";\r\n\r\n/* Material UI */\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { SnackBarAlert } from \"./UploadPost/SnackBarAlert\";\r\n\r\nconst UploadPost = ({ firebase }) => {\r\n    const { state } = useContext(GlobalContext);\r\n    const { firestore } = firebase;\r\n\r\n    const {\r\n        user: {\r\n            credentials: { userName, userImage, displayedName },\r\n        },\r\n    } = state;\r\n\r\n    const [postText, setPostText] = useState(\"\");\r\n    const [selectionStart, setSelectionStart] = useState(0);\r\n    const [uploadedImg, setUploadedImg] = useState([]);\r\n    const [uploadLoading, setUploadLoading] = useState(false);\r\n    const [tooManyFiles, setTooManyFiles] = useState(false);\r\n\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n\r\n    const [chosenGif, setChosenGif] = useState(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (postText === \"\" && uploadedImg.length === 0 && chosenGif === null) return;\r\n\r\n        setUploadLoading(true);\r\n\r\n        Promise.all(\r\n            uploadedImg.map((image) => {\r\n                const fileExtension = image.name.split(\".\").pop();\r\n                const randomName = `${uuidv4()}.${fileExtension}`;\r\n\r\n                return firebase.storage.ref(`${userName}/${randomName}`).put(image);\r\n            })\r\n        )\r\n            .then(async (url) => {\r\n                const postImg = [];\r\n                for (let i = 0; i < url.length; i++) {\r\n                    const downloadURL = await url[i].ref.getDownloadURL();\r\n                    postImg.push(downloadURL);\r\n                }\r\n                uploadPost(postImg);\r\n\r\n                //reset state\r\n                setPostText(\"\");\r\n                setUploadedImg([]);\r\n                setUploadLoading(false);\r\n                setChosenEmoji(null);\r\n                setChosenGif(null);\r\n            })\r\n            .catch((err) => {\r\n                setUploadLoading(false);\r\n                console.log(err);\r\n            });\r\n    };\r\n    const handleUploadFile = (e) => {\r\n        let files = e.target.files;\r\n        let imgFile = [];\r\n\r\n        if (uploadedImg.length >= 4 || files.length > 4) return setTooManyFiles(true);\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            imgFile.push(e.target.files[i]);\r\n        }\r\n\r\n        setUploadedImg((prevState) => [...prevState, ...imgFile]);\r\n    };\r\n\r\n    const uploadPost = async (postImg) => {\r\n        await firestore.collection(\"posts\").add({\r\n            body: postText,\r\n            commentCount: 0,\r\n            createdAt: new Date().toISOString(),\r\n            likeCount: 0,\r\n            userImage: userImage,\r\n            userName: userName,\r\n            displayedName: displayedName,\r\n            postImg,\r\n            gif: chosenGif,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (chosenEmoji) {\r\n            let startPosition = postText.substring(0, selectionStart);\r\n            let endPosition = postText.substring(selectionStart);\r\n\r\n            if (!selectionStart) {\r\n                setPostText(startPosition + endPosition + chosenEmoji);\r\n            } else {\r\n                if (startPosition !== endPosition) {\r\n                    setPostText(startPosition + endPosition + chosenEmoji);\r\n                } else {\r\n                    setPostText(startPosition + chosenEmoji);\r\n                }\r\n            }\r\n\r\n            setChosenEmoji(null);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [chosenEmoji]);\r\n\r\n    const handleChange = (e) => {\r\n        setPostText(e.target.value);\r\n        setSelectionStart(e.target.selectionStart);\r\n    };\r\n\r\n    const handleKeyUp = (e) => {\r\n        if (e.which === 37 || e.which === 38 || e.which === 39 || e.which === 40) {\r\n            setSelectionStart(e.target.selectionStart);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <SnackBarAlert tooManyFiles={tooManyFiles} setTooManyFiles={setTooManyFiles} />\r\n            <form onSubmit={handleSubmit} className={\"upload-post\" + (uploadLoading ? \" upload-post-loading\" : \"\")}>\r\n                <Box display=\"flex\" alignItems=\"flex-start\">\r\n                    <Box mr={2}>\r\n                        <Avatar alt={userName} src={userImage} className=\"avatar\" />\r\n                    </Box>\r\n                    <Box width={1}>\r\n                        <TextField\r\n                            type=\"text\"\r\n                            placeholder=\"Post a message\"\r\n                            onChange={(e) => handleChange(e)}\r\n                            onKeyUp={(e) => handleKeyUp(e)}\r\n                            onClick={(e) => setSelectionStart(e.target.selectionStart)}\r\n                            value={postText}\r\n                            multiline\r\n                            className=\"text-field\"\r\n                        />\r\n\r\n                        {uploadedImg ? <ImagePreview uploadedImg={uploadedImg} setUploadedImg={setUploadedImg} /> : null}\r\n                        {chosenGif ? <GifPreview setChosenGif={setChosenGif} chosenGif={chosenGif} /> : null}\r\n\r\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                                <ImagesUpload chosenGif={chosenGif} handleUploadFile={handleUploadFile} multiple={true} />\r\n                                <EmojiPicker setChosenEmoji={setChosenEmoji} />\r\n                                <GifPicker uploadedImg={uploadedImg} setChosenGif={setChosenGif} />\r\n                            </Box>\r\n                            <Button\r\n                                disabled={postText === \"\" && uploadedImg.length === 0 && chosenGif === null}\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                className=\"submit-button\"\r\n                            >\r\n                                Post\r\n                            </Button>\r\n                        </Box>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(UploadPost);\r\n","import React from \"react\";\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase/context\";\r\n\r\nconst withAuthentication = (Component) => {\r\n    const WithAuthentication = (props) => {\r\n        const [authUser, setAuthUser] = useState(null);\r\n\r\n        useEffect(() => {\r\n            let listener = props.firebase.auth.onAuthStateChanged((authUser) => {\r\n                authUser ? setAuthUser(authUser) : setAuthUser(null);\r\n            });\r\n\r\n            return () => {\r\n                listener();\r\n            };\r\n        }, [props.firebase.auth]);\r\n\r\n        return (\r\n            <AuthUserContext.Provider value={authUser}>\r\n                <Component {...props} />\r\n            </AuthUserContext.Provider>\r\n        );\r\n    };\r\n\r\n    return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase/context\";\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\nconst withAuthorization = (condition) => (Component) => {\r\n    const WithAuthorization = (props) => {\r\n        useEffect(() => {\r\n            let listener = props.firebase.auth.onAuthStateChanged((authUser) => {\r\n                if (!condition(authUser)) {\r\n                    props.history.push(ROUTES.SIGN_IN);\r\n                }\r\n            });\r\n\r\n            return () => {\r\n                listener();\r\n            };\r\n\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []);\r\n\r\n        return <AuthUserContext.Consumer>{(authUser) => (condition(authUser) ? <Component {...props} /> : null)}</AuthUserContext.Consumer>;\r\n    };\r\n\r\n    return compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","export const HOME = \"/\";\r\nexport const SIGN_UP = \"/signup\";\r\nexport const SIGN_IN = \"/signin\";\r\nexport const USER = \"/user/:userName\";\r\nexport const POST = \"/:userName/post/:postId\";\r\nexport const NOTIFICATIONS = \"/notifications\";\r\nexport const MESSAGES = \"/messages\";\r\n","import React from \"react\";\r\n\r\n/* components */\r\nimport Posts from \"./../components/post/Posts\";\r\nimport UploadPost from \"./../components/post/UploadPost\";\r\n\r\n/* Context */\r\nimport { withAuthorization } from \"./../config/Session\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <>\r\n            <UploadPost />\r\n            <Posts />\r\n        </>\r\n    );\r\n};\r\n\r\nconst condition = (authUser) => !!authUser;\r\nexport default withAuthorization(condition)(Home);\r\n","import React, { useState } from \"react\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../../config/Firebase/context\";\r\n\r\n//Mui stuff\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\n// Icons\r\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\r\n\r\nconst DeleteComment = ({ firebase, commentId, postId }) => {\r\n    const [open, setOpen] = useState(false);\r\n    const { firestore } = firebase;\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const deletePost = async () => {\r\n        // Delete comment\r\n        await firestore.collection(\"comments\").doc(commentId).delete();\r\n\r\n        // Update comment count on post\r\n        await firestore\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .update({ commentCount: firebase.FieldValue.increment(-1) });\r\n\r\n        await firebase.firestore.collection(\"notifications\").doc(commentId).delete();\r\n    };\r\n    return (\r\n        <>\r\n            <Button onClick={handleOpen} startIcon={<DeleteOutline />}>\r\n                Delete\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} className=\"dialogbox\" maxWidth=\"xs\">\r\n                <DialogTitle>Delete post?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        This can’t be undone and it will be removed from your profile, the timeline of any accounts that follow you, and from search\r\n                        results.\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions className=\"delete-action\">\r\n                    <Button onClick={handleClose} className=\"btn cancel\">\r\n                        cancel\r\n                    </Button>\r\n                    <Button onClick={deletePost} className=\"btn delete\">\r\n                        Delete\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(DeleteComment);\r\n","import React, { useContext, useState } from \"react\";\r\n\r\n//Components\r\nimport DeleteComment from \"./DeleteComment\";\r\n\r\n//context\r\nimport { GlobalContext } from \"./../../../config/GlobalState/GlobalState\";\r\n\r\n// Material UI\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n//Icons\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nexport const CommentMenuAction = ({ commentId, commentUsername, postId, commentCount }) => {\r\n    const { state } = useContext(GlobalContext);\r\n\r\n    const {\r\n        user: {\r\n            credentials: { userName },\r\n            authenticated,\r\n        },\r\n    } = state;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const handleClick = (event, commentId) => {\r\n        setOpen(commentId);\r\n        setAnchorEl(event.target);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(null);\r\n        setAnchorEl(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {authenticated && commentUsername === userName ? (\r\n                <>\r\n                    <IconButton\r\n                        onClick={(e) => {\r\n                            handleClick(e, commentId);\r\n                        }}\r\n                        className=\"post-toggle-menu\"\r\n                        size=\"small\"\r\n                    >\r\n                        <ExpandMoreIcon />\r\n                    </IconButton>\r\n                    <Menu className=\"menu-toggled\" anchorEl={anchorEl} open={open === commentId} onClose={handleClose}>\r\n                        <MenuItem className=\"menu-item menu-item-delete\">\r\n                            <DeleteComment commentId={commentId} postId={postId} commentCount={commentCount} />\r\n                        </MenuItem>\r\n                    </Menu>\r\n                </>\r\n            ) : null}\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport relativeTime from \"dayjs/plugin/relativeTime\";\r\n\r\n//Component\r\nimport { UserAvatar } from \"./Post/UserAvatar\";\r\nimport { PostBody } from \"./Post/PostBody\";\r\nimport { CommentMenuAction } from \"./Comment/CommentMenuAction\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\n\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DisplayReply = ({ firebase, postId, commentCount, postUsername }) => {\r\n    const [comments, setComments] = useState([]);\r\n    dayjs.extend(relativeTime);\r\n\r\n    useEffect(() => {\r\n        const result = firebase.firestore\r\n            .collection(\"comments\")\r\n            .where(\"postId\", \"==\", postId)\r\n            .onSnapshot((querySnapshot) => {\r\n                const comments = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    let commentData = doc.data();\r\n                    commentData.commentId = doc.id;\r\n                    comments.push(commentData);\r\n                });\r\n                setComments(comments);\r\n            });\r\n\r\n        return () => {\r\n            result();\r\n        };\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {comments\r\n                ? comments.map((comment) => {\r\n                      return (\r\n                          <Box width={1} display=\"flex\" alignItems=\"flex-start\" className=\"post-info post-reply\" key={comment.commentId}>\r\n                              <UserAvatar userImage={comment.userImage} userName={comment.userName} />\r\n                              <Box>\r\n                                  <Box display=\"flex\" alignItems=\"center\">\r\n                                      <Link to={`/user/${comment.userName}`}>\r\n                                          <Typography variant=\"h6\" component=\"span\" className=\"post-displayed-name\">\r\n                                              {comment.displayedName}\r\n                                          </Typography>\r\n                                          <Typography variant=\"body2\" component=\"span\" className=\"post-username\">\r\n                                              @{comment.userName} <span className=\"spacer\"> · </span>\r\n                                          </Typography>\r\n                                      </Link>\r\n                                      <Typography variant=\"body2\" component=\"p\" className=\"post-date\">\r\n                                          {dayjs(comment.createdAt).fromNow(true)}\r\n                                      </Typography>\r\n\r\n                                      <CommentMenuAction\r\n                                          commentUsername={comment.userName}\r\n                                          postId={comment.postId}\r\n                                          commentId={comment.commentId}\r\n                                          commentCount={commentCount}\r\n                                      />\r\n                                  </Box>\r\n                                  <Typography variant=\"body2\" component=\"p\" className=\"post-reply-to\">\r\n                                      Replying to <Link to={`/user/${postUsername}`}>@{postUsername}</Link>\r\n                                  </Typography>\r\n                                  <PostBody body={comment.body} postImg={comment.postImg} />\r\n                              </Box>\r\n                          </Box>\r\n                      );\r\n                  })\r\n                : null}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withFirebase(DisplayReply);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\nimport { GlobalContext } from \"../../config/GlobalState/GlobalState\";\r\n\r\n//Components\r\nimport CommentButton from \"./Post/CommentButton\";\r\nimport LikeButton from \"./Post/LikeButton\";\r\nimport { PostBody } from \"./Post/PostBody\";\r\nimport { PostMenuAction } from \"./Post/PostMenuAction\";\r\nimport DisplayReply from \"./DisplayReply\";\r\n\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n//routes\r\nimport * as ROUTES from \"./../../constants/routes\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst SinglePost = ({ firebase, postId, history }) => {\r\n    const { state, setPost } = useContext(GlobalContext);\r\n    const {\r\n        data: {\r\n            post: { likeCount, commentCount, postImg, createdAt, userName, displayedName, body, userImage, gif },\r\n        },\r\n    } = state;\r\n\r\n    useEffect(() => {\r\n        const result = firebase.firestore\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .onSnapshot((querySnapshot) => {\r\n                if (!querySnapshot.exists) {\r\n                    return history.push(ROUTES.HOME);\r\n                }\r\n                setPost(querySnapshot.data());\r\n            });\r\n\r\n        return () => {\r\n            result();\r\n        };\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return (\r\n        <>\r\n            {Object.entries(state.data.post).length !== 0 ? (\r\n                <>\r\n                    <Box width={1} className=\"post-info post-single\" key={postId}>\r\n                        <PostMenuAction postUsername={userName} postId={postId} />\r\n                        <Box className=\"user-info\" display=\"flex\" alignItems=\"center\">\r\n                            <Link to={`/user/${userName}`}>\r\n                                <Avatar alt={userName} src={userImage} className=\"avatar\" />\r\n                            </Link>\r\n                            <Link to={`/user/${userName}`}>\r\n                                <Typography variant=\"h6\" component=\"span\" className=\"post-displayed-name\">\r\n                                    {displayedName}\r\n                                </Typography>\r\n                                <Typography variant=\"body2\" component=\"span\" className=\"post-username\">\r\n                                    @{userName}\r\n                                </Typography>\r\n                            </Link>\r\n                        </Box>\r\n                        <Box width={1} mt={2}>\r\n                            <Box>\r\n                                <PostBody body={body} postImg={postImg} gif={gif} />\r\n                            </Box>\r\n                            <Box>\r\n                                <Typography variant=\"body2\" component=\"p\" className=\"post-date\">\r\n                                    {dayjs(createdAt).format(\"H:mm A\")} · {dayjs(createdAt).format(\"MMMM DD, YYYY\")}\r\n                                </Typography>\r\n                            </Box>\r\n                            {state.user.authenticated ? (\r\n                                <Box display=\"flex\" alignItems=\"center\" className=\"post-actions\">\r\n                                    <CommentButton\r\n                                        displayedName={state.user.credentials.displayedName}\r\n                                        commentCount={commentCount}\r\n                                        postId={postId}\r\n                                        userName={state.user.credentials.userName}\r\n                                        userImage={state.user.credentials.userImage}\r\n                                    />\r\n                                    <LikeButton postId={postId} userName={state.user.credentials.userName} likeCount={likeCount} />\r\n                                </Box>\r\n                            ) : null}\r\n                        </Box>\r\n                    </Box>\r\n                    <Box>\r\n                        <DisplayReply postId={postId} commentCount={commentCount} postUsername={userName} />\r\n                    </Box>\r\n                </>\r\n            ) : (\r\n                <Box width={1} display=\"flex\" justifyContent=\"center\">\r\n                    <CircularProgress />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default withRouter(withFirebase(SinglePost));\r\n","import React from \"react\";\r\n\r\nimport SinglePost from \"../components/post/SinglePost\";\r\n\r\n/* Context */\r\nimport { withAuthorization } from \"./../config/Session\";\r\n\r\nconst Post = (props) => {\r\n    const postId = props.match.params.postId;\r\n    return <SinglePost postId={postId} />;\r\n};\r\n\r\nconst condition = (authUser) => !!authUser;\r\nexport default withAuthorization(condition)(Post);\r\n","import React, { useContext } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n/* Constants */\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\n/* Context */\r\nimport { GlobalContext } from \"../../config/GlobalState/GlobalState\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\n\r\nconst PrivateMessage = ({ firebase, userName, history }) => {\r\n    const { state } = useContext(GlobalContext);\r\n\r\n    const handleClick = async () => {\r\n        const getUserCredentials = await firebase.firestore.collection(\"users\").where(\"userName\", \"==\", userName).get();\r\n\r\n        getUserCredentials.forEach(async (user) => {\r\n            const roomOne = `${state.user.credentials.userId}-${user.data().userId}`;\r\n            const roomTwo = `${user.data().userId}-${state.user.credentials.userId}`;\r\n\r\n            const doesRoomOneExist = await firebase.firestore.collection(\"rooms\").where(\"roomKey\", \"==\", roomOne).get();\r\n            const doesRoomTwoExist = await firebase.firestore.collection(\"rooms\").where(\"roomKey\", \"==\", roomTwo).get();\r\n\r\n            if (!doesRoomOneExist.empty || !doesRoomTwoExist.empty) {\r\n                if (!doesRoomOneExist.empty) {\r\n                    return history.push(`${ROUTES.MESSAGES}/${roomOne}`);\r\n                } else {\r\n                    return history.push(`${ROUTES.MESSAGES}/${roomTwo}`);\r\n                }\r\n            } else {\r\n                await firebase.firestore.collection(\"rooms\").add({\r\n                    availableUsers: [state.user.credentials.userId, user.data().userId],\r\n                    lastMessage: \"\",\r\n                    roomKey: roomOne,\r\n                });\r\n                return history.push(`${ROUTES.MESSAGES}/${roomOne}`);\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <IconButton onClick={handleClick} className=\"profile-private-message-button\">\r\n            <MailOutlineIcon />\r\n        </IconButton>\r\n    );\r\n};\r\n\r\nexport default withRouter(PrivateMessage);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\n//Mui stuff\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport PhotoCameraIcon from \"@material-ui/icons/PhotoCamera\";\r\n\r\nconst EditProfile = ({ firebase, open, handleClose, user }) => {\r\n    const [profileName, setProfileName] = useState(\"\");\r\n    const [bio, setBio] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [website, setWebsite] = useState(\"\");\r\n\r\n    const [userImagePreview, setUserImagePreview] = useState(\"\");\r\n    const [userImage, setUserImage] = useState(\"\");\r\n\r\n    const [userBannerPreview, setUserBannerPreview] = useState(\"\");\r\n    const [bannerImage, setBannerImage] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setProfileName(`${user.displayedName}`);\r\n        setBio(user.bio);\r\n        setLocation(user.location);\r\n        setWebsite(user.website);\r\n        setUserImagePreview(user.userImage);\r\n        setUserBannerPreview(user.userBanner);\r\n    }, [user]);\r\n\r\n    const handleUpdateProfilePic = (e) => {\r\n        let image = e.target.files[0];\r\n\r\n        setUserImage(image);\r\n        setUserImagePreview(URL.createObjectURL(image));\r\n    };\r\n    const handleUpdateBanner = (e) => {\r\n        let image = e.target.files[0];\r\n\r\n        setBannerImage(image);\r\n        setUserBannerPreview(URL.createObjectURL(image));\r\n    };\r\n\r\n    const updateProfile = async () => {\r\n        let uploadProfilePicURL = user.userImage;\r\n        let uploadBannerURL = user.userBanner;\r\n\r\n        if (userImage) {\r\n            //Delete previous img\r\n            const storageProfilePicture = await firebase.storage.refFromURL(uploadProfilePicURL);\r\n            storageProfilePicture.delete();\r\n\r\n            //Upload new img\r\n            const fileExtension = userImage.name.split(\".\").pop();\r\n            const randomName = `${uuidv4()}.${fileExtension}`;\r\n            const uploadTask = await firebase.storage.ref(`${user.userName}/${randomName}`).put(userImage);\r\n\r\n            uploadProfilePicURL = await uploadTask.ref.getDownloadURL();\r\n\r\n            // Update new img\r\n            const userPosts = await firebase.firestore.collection(\"posts\").where(\"userName\", \"==\", user.userName).get();\r\n            userPosts.forEach((doc) => {\r\n                doc.ref.update({\r\n                    userImage: uploadProfilePicURL,\r\n                });\r\n            });\r\n            const userComents = await firebase.firestore.collection(\"comments\").where(\"userName\", \"==\", user.userName).get();\r\n            userComents.forEach((doc) => {\r\n                doc.ref.update({\r\n                    userImage: uploadProfilePicURL,\r\n                });\r\n            });\r\n        }\r\n\r\n        if (bannerImage) {\r\n            //Delete previous img\r\n            const storageBanner = await firebase.storage.refFromURL(uploadBannerURL);\r\n            storageBanner.delete();\r\n\r\n            //Upload new img\r\n            const fileExtension = bannerImage.name.split(\".\").pop();\r\n            const randomName = `${uuidv4()}.${fileExtension}`;\r\n            const uploadTask = await firebase.storage.ref(`${user.userName}/${randomName}`).put(bannerImage);\r\n\r\n            uploadBannerURL = await uploadTask.ref.getDownloadURL();\r\n        }\r\n\r\n        if (user.displayedName !== profileName) {\r\n            // Update new name\r\n            const userPosts = await firebase.firestore.collection(\"posts\").where(\"userName\", \"==\", user.userName).get();\r\n            userPosts.forEach((doc) => {\r\n                doc.ref.update({\r\n                    displayedName: profileName,\r\n                    displayedName_lowercase: profileName.toLowerCase(),\r\n                });\r\n            });\r\n\r\n            const userComents = await firebase.firestore.collection(\"comments\").where(\"userName\", \"==\", user.userName).get();\r\n            userComents.forEach((doc) => {\r\n                doc.ref.update({\r\n                    displayedName: profileName,\r\n                    displayedName_lowercase: profileName.toLowerCase(),\r\n                });\r\n            });\r\n        }\r\n\r\n        // Update user\r\n        await firebase.firestore.collection(\"users\").doc(user.userName).update({\r\n            bio: bio,\r\n            displayedName: profileName,\r\n            displayedName_lowercase: profileName.toLowerCase(),\r\n            location: location,\r\n            website: website,\r\n            userImage: uploadProfilePicURL,\r\n            userBanner: uploadBannerURL,\r\n        });\r\n\r\n        return handleClose();\r\n    };\r\n\r\n    return (\r\n        <Dialog open={open} onClose={handleClose} className=\"dialogbox edit-profile\">\r\n            <DialogTitle>Edit profile</DialogTitle>\r\n            <DialogContent>\r\n                <div\r\n                    className=\"update-banner\"\r\n                    style={{\r\n                        backgroundImage: `url(${userBannerPreview})`,\r\n                        backgroundPosition: \"center\",\r\n                        backgroundSize: \"cover\",\r\n                        backgroundRepeat: \"no-repeat\",\r\n                    }}\r\n                >\r\n                    <div className=\"layer\"></div>\r\n                    <input\r\n                        accept=\"image/jpeg,image/png,image/webp,image/gif,video/mp4,video/quicktime,video/webm\"\r\n                        hidden\r\n                        id=\"icon-button-edit-banner\"\r\n                        type=\"file\"\r\n                        onChange={handleUpdateBanner}\r\n                    />\r\n                    <label htmlFor=\"icon-button-edit-banner\">\r\n                        <IconButton className=\"upload-img\" aria-label=\"upload image\" component=\"span\">\r\n                            <PhotoCameraIcon />\r\n                        </IconButton>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"edit-profile-info\">\r\n                    <div\r\n                        className=\"update-profile-pic\"\r\n                        style={{\r\n                            backgroundImage: `url(${userImagePreview})`,\r\n                            backgroundPosition: \"center\",\r\n                            backgroundSize: \"cover\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                        }}\r\n                    >\r\n                        <div className=\"layer\"></div>\r\n                        <input\r\n                            accept=\"image/jpeg,image/png,image/webp,image/gif,video/mp4,video/quicktime,video/webm\"\r\n                            hidden\r\n                            id=\"icon-button-edit\"\r\n                            type=\"file\"\r\n                            onChange={handleUpdateProfilePic}\r\n                        />\r\n                        <label htmlFor=\"icon-button-edit\">\r\n                            <IconButton className=\"upload-img\" aria-label=\"upload image\" component=\"span\">\r\n                                <PhotoCameraIcon />\r\n                            </IconButton>\r\n                        </label>\r\n                    </div>\r\n                    <TextField type=\"text\" label=\"Name\" onChange={(e) => setProfileName(e.target.value)} value={profileName} className=\"text-field\" />\r\n                    <TextField type=\"text\" label=\"Bio\" onChange={(e) => setBio(e.target.value)} value={bio} multiline className=\"text-field\" />\r\n                    <TextField type=\"text\" label=\"Location\" onChange={(e) => setLocation(e.target.value)} value={location} className=\"text-field\" />\r\n                    <TextField type=\"text\" label=\"Website\" onChange={(e) => setWebsite(e.target.value)} value={website} className=\"text-field\" />\r\n                </div>\r\n            </DialogContent>\r\n            <DialogActions className=\"delete-action\">\r\n                <Button onClick={handleClose} className=\"btn cancel\">\r\n                    Cancel\r\n                </Button>\r\n                <Button className=\"btn save\" onClick={updateProfile}>\r\n                    Save\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nexport default EditProfile;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n/* Material UI */\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const Follow = ({ loggedUser, userName, firebase }) => {\r\n    const [isFollowing, setIsFollowing] = useState(false);\r\n    const [followingText, setFollowingText] = useState(\"Following\");\r\n\r\n    useEffect(() => {\r\n        const getFollowing = async () => {\r\n            const followingRef = await firebase.firestore.collection(\"following\").doc(loggedUser).get();\r\n            if (followingRef.exists) {\r\n                if (followingRef.data().listFollowing.includes(userName)) setIsFollowing(true);\r\n            }\r\n        };\r\n\r\n        if (loggedUser && userName) {\r\n            getFollowing();\r\n        }\r\n\r\n        return () => {\r\n            setIsFollowing(false);\r\n        };\r\n    }, [loggedUser, userName, firebase.firestore]);\r\n\r\n    const followUser = async () => {\r\n        setIsFollowing(true);\r\n\r\n        const userFollowDoc = await firebase.firestore.collection(\"following\").doc(loggedUser).get();\r\n\r\n        if (userFollowDoc.exists) {\r\n            await firebase.firestore\r\n                .collection(\"following\")\r\n                .doc(loggedUser)\r\n                .update({\r\n                    listFollowing: firebase.FieldValue.arrayUnion(userName),\r\n                });\r\n        } else {\r\n            await firebase.firestore\r\n                .collection(\"following\")\r\n                .doc(loggedUser)\r\n                .set({\r\n                    listFollowing: firebase.FieldValue.arrayUnion(userName),\r\n                });\r\n        }\r\n\r\n        await firebase.firestore\r\n            .collection(\"users\")\r\n            .doc(loggedUser)\r\n            .update({\r\n                following: firebase.FieldValue.increment(1),\r\n            });\r\n        await firebase.firestore\r\n            .collection(\"users\")\r\n            .doc(userName)\r\n            .update({\r\n                followers: firebase.FieldValue.increment(1),\r\n            });\r\n    };\r\n    const unFollowUser = async () => {\r\n        setIsFollowing(false);\r\n        await firebase.firestore\r\n            .collection(\"following\")\r\n            .doc(loggedUser)\r\n            .update({\r\n                listFollowing: firebase.FieldValue.arrayRemove(userName),\r\n            });\r\n\r\n        await firebase.firestore\r\n            .collection(\"users\")\r\n            .doc(loggedUser)\r\n            .update({\r\n                following: firebase.FieldValue.increment(-1),\r\n            });\r\n        await firebase.firestore\r\n            .collection(\"users\")\r\n            .doc(userName)\r\n            .update({\r\n                followers: firebase.FieldValue.increment(-1),\r\n            });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {!isFollowing ? (\r\n                <Button onClick={followUser} variant=\"contained\" className=\"follow-button\">\r\n                    Follow\r\n                </Button>\r\n            ) : (\r\n                <Button\r\n                    onClick={unFollowUser}\r\n                    variant=\"contained\"\r\n                    className=\"unfollow-button\"\r\n                    onMouseEnter={() => setFollowingText(\"Unfollow\")}\r\n                    onMouseLeave={() => setFollowingText(\"Following\")}\r\n                >\r\n                    {followingText}\r\n                </Button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport { compose } from \"recompose\";\r\n\r\n/* Components */\r\nimport PrivateMessage from \"./PrivateMessage\";\r\nimport EditProfile from \"./EditProfile\";\r\nimport { Follow } from \"./Follow\";\r\n\r\n/* Constants */\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\n/* Context */\r\nimport { withFirebase } from \"./../../config/Firebase/context\";\r\n\r\n/* Material UI */\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n/* Material UI Icons*/\r\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\n\r\nconst Banner = ({ firebase, userName, loggedUser, history }) => {\r\n    const [user, setUser] = useState({});\r\n    const [isUserProfile, setIsUserProfile] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    useEffect(() => {\r\n        const result = firebase.firestore\r\n            .collection(\"users\")\r\n            .doc(userName)\r\n            .onSnapshot((querySnapshot) => {\r\n                if (!querySnapshot.exists) return history.push(ROUTES.HOME);\r\n                setUser(querySnapshot.data());\r\n            });\r\n\r\n        return () => {\r\n            result();\r\n        };\r\n    }, [userName, history, firebase.firestore]);\r\n\r\n    useEffect(() => {\r\n        if (userName === loggedUser) return setIsUserProfile(true);\r\n        if (userName !== loggedUser) return setIsUserProfile(false);\r\n    }, [loggedUser, userName]);\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(user).length === 0 && user.constructor === Object ? (\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <CircularProgress size={30} />\r\n                </Box>\r\n            ) : (\r\n                <div className=\"user-banner\">\r\n                    <div\r\n                        className=\"banner-img\"\r\n                        style={{\r\n                            backgroundImage: `url(${user.userBanner})`,\r\n                            backgroundPosition: \"center\",\r\n                            backgroundSize: \"cover\",\r\n                            backgroundRepeat: \"no-repeat\",\r\n                        }}\r\n                    ></div>\r\n                    <div className=\"banner-info\">\r\n                        <div className=\"banner-profile-pic-container\">\r\n                            <div\r\n                                style={{\r\n                                    backgroundImage: `url(${user.userImage})`,\r\n                                    backgroundPosition: \"center\",\r\n                                    backgroundSize: \"cover\",\r\n                                    backgroundRepeat: \"no-repeat\",\r\n                                }}\r\n                            ></div>\r\n                            <img src={user.userImage} alt={`${user.userName}`} />\r\n                        </div>\r\n                        <Typography variant=\"body2\" className=\"user-displayedName\">\r\n                            {user.displayedName}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" className=\"user-userName\">\r\n                            @{user.userName}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" className=\"user-bio\">\r\n                            {user.bio}\r\n                        </Typography>\r\n                        <Box display=\"flex\" alignItems=\"center\" mt={1} flexWrap=\"wrap\">\r\n                            <Typography variant=\"body2\" className=\"user-location\">\r\n                                <LocationOnIcon /> {user.location}\r\n                            </Typography>\r\n                            <Typography variant=\"body2\">\r\n                                <a href={`https://${user.website}`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"user-website\">\r\n                                    <LinkIcon /> {user.website}\r\n                                </a>\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" className=\"user-joined\">\r\n                                <CalendarTodayIcon fontSize=\"small\" /> Joined {dayjs(user.createdAt).format(\"MMMM YYYY\")}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box display=\"flex\" alignItems=\"center\" mt={1}>\r\n                            <Typography variant=\"body2\" className=\"user-following\">\r\n                                <span>{user.following}</span> Following\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" className=\"user-followers\">\r\n                                <span>{user.followers}</span> Followers\r\n                            </Typography>\r\n                        </Box>\r\n                        {isUserProfile ? (\r\n                            <>\r\n                                <Button onClick={() => setOpen(true)} variant=\"contained\" className=\"edit-profile-button\">\r\n                                    Edit profile\r\n                                </Button>\r\n                                <EditProfile open={open} handleClose={handleClose} user={user} firebase={firebase} />\r\n                            </>\r\n                        ) : (\r\n                            <div className=\"banner-action-button\">\r\n                                <Follow loggedUser={loggedUser} userName={userName} firebase={firebase} />\r\n                                <PrivateMessage loggedUser={loggedUser} userName={userName} firebase={firebase} />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default compose(withRouter, withFirebase)(Banner);\r\n","import React, { useContext } from \"react\";\r\n\r\n/* Context */\r\nimport { GlobalContext } from \"./../config/GlobalState/GlobalState\";\r\nimport { withAuthorization } from \"./../config/Session\";\r\n\r\n/* Component */\r\nimport Banner from \"./../components/profile/Banner\";\r\nimport Posts from \"./../components/post/Posts\";\r\n\r\nconst User = (props) => {\r\n    const { state } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <div>\r\n            <Banner userName={props.match.params.userName} loggedUser={state.user.credentials.userName} />\r\n            <Posts singleUserPosts={props.match.params.userName} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst condition = (authUser) => !!authUser;\r\nexport default withAuthorization(condition)(User);\r\n","import React from \"react\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\n\r\n// Material ui\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport KeyboardReturnRoundedIcon from \"@material-ui/icons/KeyboardReturnRounded\";\r\n\r\nconst SignOut = ({ firebase }) => (\r\n    <IconButton color=\"primary\" onClick={firebase.doSignOut}>\r\n        <KeyboardReturnRoundedIcon />\r\n    </IconButton>\r\n);\r\n\r\nexport default withFirebase(SignOut);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDebounce } from \"./../../helper/function\";\r\n\r\n/* Context */\r\nimport { withFirebase } from \"./../../config/Firebase/context\";\r\n\r\n/* Material UI */\r\n\r\nimport Box from \"@material-ui/core/Box\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\n\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst Search = ({ firebase }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [searchResult, setSearchResult] = useState([]);\r\n    const [isFocus, setIsFocus] = useState(false);\r\n\r\n    const debouncedSearchTerm = useDebounce(search, 500);\r\n\r\n    const wrapperRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const searchUser = async () => {\r\n            const searchUserName = search.toLowerCase();\r\n            const userResult = [];\r\n\r\n            const resultUser = await firebase.firestore\r\n                .collection(\"users\")\r\n                .orderBy(\"userName_lowercase\")\r\n                .startAt(searchUserName)\r\n                .endAt(searchUserName + \"\\uf8ff\")\r\n                .get();\r\n\r\n            resultUser.forEach((res) => {\r\n                userResult.push(res.data());\r\n            });\r\n\r\n            setSearchResult(userResult);\r\n        };\r\n        if (search) {\r\n            searchUser();\r\n        } else {\r\n            setSearchResult([]);\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleFocus, false);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleFocus, false);\r\n        };\r\n    });\r\n\r\n    const handleFocus = (e) => {\r\n        if (!wrapperRef.current.contains(e.target)) return setIsFocus(false);\r\n    };\r\n\r\n    const handleClickUser = () => {\r\n        setSearch(\"\");\r\n        setSearchResult([]);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-user-container\" ref={wrapperRef}>\r\n            <TextField\r\n                className={`search-input ${isFocus ? \"search-input-focused\" : \"\"}`}\r\n                value={search}\r\n                onChange={(e) => {\r\n                    setSearch(e.target.value);\r\n                }}\r\n                InputProps={{\r\n                    startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n                onFocus={() => setIsFocus(true)}\r\n                placeholder=\"Search a user\"\r\n            />\r\n            {search ? (\r\n                <IconButton className=\"search-delete-search\" onClick={() => setSearch(\"\")}>\r\n                    <CancelIcon />\r\n                </IconButton>\r\n            ) : null}\r\n            {searchResult.length > 0 && isFocus ? (\r\n                <div className=\"search-user-result\">\r\n                    {searchResult.map((user, key) => {\r\n                        return (\r\n                            <Link to={`/user/${user.userName}`} onClick={() => handleClickUser()} key={key}>\r\n                                <Box className=\"search-user-info\" display=\"flex\" alignItems=\"center\">\r\n                                    <img src={user.userImage} alt={user.userName} />\r\n                                    <div>\r\n                                        <Typography className=\"user-displayedName\">{user.displayedName}</Typography>\r\n                                        <Typography className=\"user-userName\">@{user.userName}</Typography>\r\n                                    </div>\r\n                                </Box>\r\n                            </Link>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\nexport default withFirebase(Search);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport function useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n    useEffect(() => {\r\n        const handler = setTimeout(() => {\r\n            setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(handler);\r\n        };\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    return debouncedValue;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n/* Constants */\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\n/* Context */\r\nimport { GlobalContext } from \"../../config/GlobalState/GlobalState\";\r\n\r\n/* Components */\r\nimport SignOutButton from \"../auth/SignOut\";\r\nimport Search from \"./Search\";\r\n\r\n/* Material UI */\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\n\r\nexport const NavigationAuth = () => {\r\n    const { state } = useContext(GlobalContext);\r\n    const {\r\n        user: { notifications },\r\n    } = state;\r\n\r\n    let notificationsIcon;\r\n    if (notifications && notifications.length > 0) {\r\n        notifications.filter((not) => not.read === false).length > 0\r\n            ? (notificationsIcon = (\r\n                  <Badge badgeContent={notifications.filter((not) => not.read === false).length} className=\"notification-badge\">\r\n                      <NotificationsIcon />\r\n                  </Badge>\r\n              ))\r\n            : (notificationsIcon = <NotificationsIcon />);\r\n    } else {\r\n        notificationsIcon = <NotificationsIcon />;\r\n    }\r\n\r\n    return (\r\n        <nav className=\"nav\">\r\n            <ul>\r\n                <li>\r\n                    <NavLink exact activeClassName=\"active-menu\" to={ROUTES.HOME}>\r\n                        <IconButton color=\"primary\">\r\n                            <HomeRoundedIcon />\r\n                        </IconButton>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact activeClassName=\"active-menu\" to={`/user/${state.user.credentials.userName}`}>\r\n                        <IconButton color=\"primary\">\r\n                            <PersonIcon />\r\n                        </IconButton>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink exact activeClassName=\"active-menu\" to={ROUTES.NOTIFICATIONS}>\r\n                        <IconButton color=\"primary\">{notificationsIcon}</IconButton>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink activeClassName=\"active-menu\" to={ROUTES.MESSAGES}>\r\n                        <IconButton color=\"primary\">{<MailOutlineIcon />}</IconButton>\r\n                    </NavLink>\r\n                </li>\r\n                <li>\r\n                    <SignOutButton />\r\n                </li>\r\n                <li>\r\n                    <Search />\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport * as ROUTES from \"./../../constants/routes\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const NavigationNonAuth = () => {\r\n    return (\r\n        <nav className=\"nav nav-not-logged\">\r\n            <ul>\r\n                <li>\r\n                    <Link to={ROUTES.SIGN_UP}>\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                            Sign Up\r\n                        </Typography>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={ROUTES.SIGN_IN}>\r\n                        <Typography variant=\"body1\" component=\"span\">\r\n                            Log in\r\n                        </Typography>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\n/* Context */\r\nimport { AuthUserContext } from \"../../config/Session\";\r\n\r\n/* Components */\r\nimport { NavigationAuth } from \"./NavigationAuth\";\r\nimport { NavigationNonAuth } from \"./NavigationNonAuth\";\r\n\r\nconst Navigation = () => {\r\n    return <AuthUserContext.Consumer>{(authUser) => (authUser !== null ? <NavigationAuth /> : <NavigationNonAuth />)}</AuthUserContext.Consumer>;\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState } from \"react\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\n\r\n/* Material UI */\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst INITIAL_STATE = {\r\n    username: \"\",\r\n    email: \"\",\r\n    passwordOne: \"\",\r\n    passwordTwo: \"\",\r\n    error: null,\r\n};\r\n\r\nconst SignUpForm = ({ firebase }) => {\r\n    const [signUpState, setSignUpState] = useState(INITIAL_STATE);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { username, email, passwordOne } = signUpState;\r\n\r\n        setLoading(true);\r\n\r\n        // Check if user exist\r\n        const snapshot = await firebase.firestore.collection(\"users\").doc(`${username}`).get();\r\n\r\n        // if snashop doesn't exist, we can create the user\r\n        if (!snapshot.exists) {\r\n            try {\r\n                const authUser = await firebase.doCreateUserWithEmailAndPassword(email, passwordOne);\r\n                await uploadUser(email, username, authUser.user.uid);\r\n            } catch (error) {\r\n                setLoading(false);\r\n                setSignUpState((prevState) => ({ ...prevState, error }));\r\n            }\r\n        } else {\r\n            setLoading(false);\r\n            setSignUpState((prevState) => ({ ...prevState, error: { message: \"Username already taken\" } }));\r\n        }\r\n    };\r\n\r\n    const uploadUser = async (email, userName, userId) => {\r\n        let userName_lowercase = userName.toLowerCase();\r\n        return await firebase.firestore\r\n            .collection(\"users\")\r\n            .doc(userName)\r\n            .set({\r\n                bio: \"\",\r\n                createdAt: new Date().toISOString(),\r\n                email,\r\n                userName,\r\n                userName_lowercase,\r\n                displayedName: userName,\r\n                displayedName_lowercase: userName_lowercase,\r\n                userImage: `https://firebasestorage.googleapis.com/v0/b/${process.env.REACT_APP_STORAGE_BUCKET}/o/no-img.png?alt=media`,\r\n                userBanner: \"\",\r\n                location: \"\",\r\n                userId,\r\n                website: \"\",\r\n                followers: 0,\r\n                following: 0,\r\n            });\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setSignUpState({ ...signUpState, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const isInvalid =\r\n        signUpState.passwordOne !== signUpState.passwordTwo ||\r\n        signUpState.passwordOne === \"\" ||\r\n        signUpState.email === \"\" ||\r\n        signUpState.username === \"\";\r\n\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <TextField\r\n                className=\"form-input-container\"\r\n                name=\"username\"\r\n                value={signUpState.username}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                label=\"Username\"\r\n            />\r\n            <TextField\r\n                className=\"form-input-container\"\r\n                name=\"email\"\r\n                value={signUpState.email}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n            />\r\n            <TextField\r\n                className=\"form-input-container\"\r\n                name=\"passwordOne\"\r\n                value={signUpState.passwordOne}\r\n                onChange={onChange}\r\n                type=\"password\"\r\n                label=\"Password\"\r\n            />\r\n            <TextField\r\n                className=\"form-input-container\"\r\n                name=\"passwordTwo\"\r\n                value={signUpState.passwordTwo}\r\n                onChange={onChange}\r\n                type=\"password\"\r\n                label=\"Confirm Password\"\r\n            />\r\n            <Button className=\"form-button\" type=\"submit\" variant=\"contained\" disabled={isInvalid}>\r\n                {!loading ? \"Sign Up\" : <CircularProgress size={30} />}\r\n            </Button>\r\n\r\n            {signUpState.error && (\r\n                <Typography variant=\"body2\" className=\"form-error\">\r\n                    {signUpState.error.message}\r\n                </Typography>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default withFirebase(SignUpForm);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n/* Components */\r\nimport SignUpForm from \"./../components/auth/SignUpForm\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n/* Routes */\r\nimport * as ROUTES from \"./../constants/routes\";\r\n\r\n/* Context */\r\nimport { GlobalContext } from \"./../config/GlobalState/GlobalState\";\r\n\r\nexport const SignUp = () => {\r\n    const { state } = useContext(GlobalContext);\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n    const {\r\n        user: { authenticated, loading },\r\n    } = state;\r\n\r\n    useEffect(() => {\r\n        authenticated ? setRedirect(true) : setRedirect(false);\r\n    }, [authenticated]);\r\n\r\n    return (\r\n        <>\r\n            {!loading ? (\r\n                redirect ? (\r\n                    <Redirect to=\"/\" />\r\n                ) : (\r\n                    <Box className=\"form-container\">\r\n                        <Typography variant=\"h4\" component=\"h1\">\r\n                            Create an account\r\n                        </Typography>\r\n                        <SignUpForm />\r\n                        <Link to={ROUTES.SIGN_IN} className=\"form-link\">\r\n                            <Typography variant=\"body1\" component=\"span\">\r\n                                Log In\r\n                            </Typography>\r\n                        </Link>\r\n                    </Box>\r\n                )\r\n            ) : (\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <CircularProgress size={50} />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n//context\r\nimport { withFirebase } from \"../../config/Firebase/context\";\r\n\r\n/* Material UI */\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst INITIAL_STATE = {\r\n    email: \"\",\r\n    password: \"\",\r\n    error: null,\r\n};\r\n\r\nconst SignInForm = ({ firebase }) => {\r\n    const [signInState, setSignInState] = useState(INITIAL_STATE);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { email, password } = signInState;\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            await firebase.doSignInWithEmailAndPassword(email, password);\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setSignInState((prevState) => ({ ...prevState, error }));\r\n        }\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setSignInState({ ...signInState, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const isInvalid = signInState.password === \"\" || signInState.email === \"\";\r\n    return (\r\n        <form onSubmit={onSubmit}>\r\n            <TextField\r\n                className=\"form-input-container\"\r\n                name=\"email\"\r\n                value={signInState.email}\r\n                onChange={onChange}\r\n                type=\"text\"\r\n                label=\"Email Address\"\r\n            />\r\n            <TextField\r\n                className=\"form-input-container\"\r\n                name=\"password\"\r\n                value={signInState.password}\r\n                onChange={onChange}\r\n                type=\"password\"\r\n                label=\"Password\"\r\n            />\r\n            <Button className=\"form-button\" type=\"submit\" variant=\"contained\" disabled={isInvalid}>\r\n                {!loading ? \"Log In\" : <CircularProgress size={30} />}\r\n            </Button>\r\n\r\n            {signInState.error && (\r\n                <Typography variant=\"body2\" className=\"form-error\">\r\n                    {signInState.error.message}\r\n                </Typography>\r\n            )}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default withFirebase(SignInForm);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n/* Components */\r\nimport SignInForm from \"./../components/auth/SignInForm\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n/* Routes */\r\nimport * as ROUTES from \"./../constants/routes\";\r\n\r\n/* Context */\r\nimport { GlobalContext } from \"./../config/GlobalState/GlobalState\";\r\n\r\nconst SignIn = () => {\r\n    const { state } = useContext(GlobalContext);\r\n    const [redirect, setRedirect] = useState(null);\r\n\r\n    const {\r\n        user: { authenticated, loading },\r\n    } = state;\r\n\r\n    useEffect(() => {\r\n        authenticated ? setRedirect(true) : setRedirect(false);\r\n    }, [authenticated]);\r\n\r\n    return (\r\n        <>\r\n            {!loading ? (\r\n                redirect ? (\r\n                    <Redirect to=\"/\" />\r\n                ) : (\r\n                    <Box className=\"form-container\">\r\n                        <Typography variant=\"h4\" component=\"h1\">\r\n                            Log in\r\n                        </Typography>\r\n                        <SignInForm />\r\n                        <Link to={ROUTES.SIGN_UP} className=\"form-link\">\r\n                            <Typography variant=\"body1\" component=\"span\">\r\n                                Sign Up\r\n                            </Typography>\r\n                        </Link>\r\n                    </Box>\r\n                )\r\n            ) : (\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <CircularProgress size={50} />\r\n                </Box>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Context */\r\nimport { withFirebase } from \"./../config/Firebase/context\";\r\nimport { GlobalContext } from \"./../config/GlobalState/GlobalState\";\r\nimport { withAuthorization } from \"./../config/Session\";\r\n\r\n/* Material UI */\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport LikedPost from \"@material-ui/icons/Favorite\";\r\n\r\nconst Notifications = ({ firebase }) => {\r\n    const { state } = useContext(GlobalContext);\r\n    const {\r\n        user: { notifications },\r\n    } = state;\r\n\r\n    const [userProfils, setUserProfils] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (notifications && notifications.length > 0) {\r\n            notifications.forEach(async (notification) => {\r\n                const getUser = await firebase.firestore.collection(\"users\").where(\"userName\", \"==\", notification.sender).get();\r\n                getUser.forEach((user) => {\r\n                    setUserProfils((prevState) => {\r\n                        if (!prevState.filter((u) => u.userName === user.data().userName).length > 0) {\r\n                            return [...prevState, user.data()];\r\n                        }\r\n                        return [...prevState];\r\n                    });\r\n                });\r\n            });\r\n        }\r\n    }, [notifications, firebase.firestore]);\r\n\r\n    const handleMouseEnter = async (notifId, isRead) => {\r\n        if (!isRead) {\r\n            await firebase.firestore.collection(\"notifications\").doc(notifId).update({\r\n                read: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"notifications-container\">\r\n            <Typography component=\"h1\">Notifications</Typography>\r\n            {notifications !== null ? (\r\n                <>\r\n                    {notifications.length > 0 && userProfils && userProfils.length > 0 ? (\r\n                        <>\r\n                            {notifications.map((notification, key) => {\r\n                                const verb = notification.type === \"like\" ? \"liked\" : \"commented on\";\r\n\r\n                                const getUserImg = userProfils.filter((user) => user.userName === notification.sender);\r\n                                const userImg = getUserImg.length > 0 ? getUserImg[0].userImage : null;\r\n\r\n                                const getUserName = userProfils.filter((user) => user.userName === notification.sender);\r\n                                const userName = getUserName.length > 0 ? getUserImg[0].userName : null;\r\n\r\n                                const className = notification.read ? \"notification-read\" : \"notification-not-read\";\r\n\r\n                                return (\r\n                                    <Box\r\n                                        className={`notification-item ${className}`}\r\n                                        key={key}\r\n                                        onMouseEnter={() => handleMouseEnter(notification.id, notification.read)}\r\n                                    >\r\n                                        <Link\r\n                                            to={`/${notification.recipient}/post/${notification.postId}`}\r\n                                            className=\"notification-global-link\"\r\n                                        ></Link>\r\n                                        <Box display=\"flex\" alignItems=\"flex-start\">\r\n                                            {notification.type === \"like\" ? (\r\n                                                <LikedPost />\r\n                                            ) : (\r\n                                                <SvgIcon className=\"comment-icon\">\r\n                                                    <path d=\"M14.046 2.242l-4.148-.01h-.002c-4.374 0-7.8 3.427-7.8 7.802 0 4.098 3.186 7.206 7.465 7.37v3.828c0 .108.044.286.12.403.142.225.384.347.632.347.138 0 .277-.038.402-.118.264-.168 6.473-4.14 8.088-5.506 1.902-1.61 3.04-3.97 3.043-6.312v-.017c-.006-4.367-3.43-7.787-7.8-7.788zm3.787 12.972c-1.134.96-4.862 3.405-6.772 4.643V16.67c0-.414-.335-.75-.75-.75h-.396c-3.66 0-6.318-2.476-6.318-5.886 0-3.534 2.768-6.302 6.3-6.302l4.147.01h.002c3.532 0 6.3 2.766 6.302 6.296-.003 1.91-.942 3.844-2.514 5.176z\"></path>\r\n                                                </SvgIcon>\r\n                                            )}\r\n                                            <Box>\r\n                                                <Link to={`/user/${userName}`} className=\"notification-user-link\">\r\n                                                    <Avatar alt={notification.sender} src={userImg} className=\"avatar\" />\r\n                                                </Link>\r\n                                                <Typography component=\"p\" variant=\"body2\" className=\"notifciation-user-infos\">\r\n                                                    <Link to={`/user/${userName}`} className=\"notification-user-link notification-userName\">\r\n                                                        {notification.sender}\r\n                                                    </Link>\r\n                                                    {` ${verb} your post`}\r\n                                                </Typography>\r\n                                            </Box>\r\n                                        </Box>\r\n                                    </Box>\r\n                                );\r\n                            })}\r\n                        </>\r\n                    ) : (\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            <CircularProgress size={30} />\r\n                        </Box>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <Typography className=\"no-notificiations\">No notifications yet</Typography>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst condition = (authUser) => !!authUser;\r\nexport default withAuthorization(condition)(withFirebase(Notifications));\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/* Material UI */\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const ListPrivateMessages = ({ loggedUserId, firebase, roomOpen, setRoomOpen }) => {\r\n    const [rooms, setRooms] = useState([]);\r\n    const [listUsers, setListUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loggedUserId) {\r\n            const getRooms = async () => {\r\n                const rooms = await firebase.firestore\r\n                    .collection(\"rooms\")\r\n                    .orderBy(\"lastMessage\", \"desc\")\r\n                    .where(\"availableUsers\", \"array-contains\", loggedUserId)\r\n                    .get();\r\n\r\n                const roomsArr = [];\r\n                rooms.forEach((element) => {\r\n                    roomsArr.push(element.data());\r\n                });\r\n\r\n                setRooms(roomsArr);\r\n            };\r\n            getRooms();\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [loggedUserId]);\r\n\r\n    useEffect(() => {\r\n        if (rooms.length > 0) {\r\n            rooms.map(async (room) => {\r\n                const roomUserId = room.availableUsers.filter((e) => e !== loggedUserId)[0];\r\n                const users = await firebase.firestore.collection(\"users\").where(\"userId\", \"==\", roomUserId).get();\r\n\r\n                users.forEach((element) => {\r\n                    const roomKey = room.roomKey;\r\n                    setListUsers((prevState) => [...prevState, { roomKey, ...element.data() }]);\r\n                });\r\n            });\r\n        }\r\n\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [rooms]);\r\n\r\n    return (\r\n        <div className=\"private-message-list\">\r\n            {listUsers && listUsers.length > 0\r\n                ? listUsers.map((user, key) => {\r\n                      return (\r\n                          <Box\r\n                              display=\"flex\"\r\n                              alignItems=\"center\"\r\n                              key={key}\r\n                              className={`single-message-info ${roomOpen === user.roomKey ? \"active-room\" : \"\"}`}\r\n                              onClick={() => {\r\n                                  setRoomOpen(`${user.roomKey}`);\r\n                              }}\r\n                          >\r\n                              <Link to={`/user/${user.userName}`}>\r\n                                  <Avatar alt={user.userName} src={user.userImage} className=\"avatar\" />\r\n                              </Link>\r\n                              <Box ml={2} display=\"flex\" alignItems=\"center\">\r\n                                  <Typography variant=\"h6\" component=\"p\" className=\"dm-displayed-name\">\r\n                                      {user.displayedName}\r\n                                  </Typography>\r\n                                  <Typography variant=\"body2\" component=\"p\" className=\"dm-username\">\r\n                                      @{user.userName}\r\n                                  </Typography>\r\n                              </Box>\r\n                          </Box>\r\n                      );\r\n                  })\r\n                : null}\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { ImagesUpload } from \"../post/UploadPost/ImagesUpload\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\n\r\nexport const SubmitMessage = ({ firebase, roomOpen, roomUserNotLogged, loggedUserId }) => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [isFocus, setIsFocus] = useState(false);\r\n\r\n    const [uploadedImg, setUploadedImg] = useState(\"\");\r\n    const [uploadLoading, setUploadLoading] = useState(false);\r\n\r\n    const handleSubmitMessage = async (img) => {\r\n        await firebase.firestore.collection(\"messages\").doc(roomOpen).collection(roomOpen).add({\r\n            content: message,\r\n            contentImg: img,\r\n            createdAt: new Date().toISOString(),\r\n            recipientId: roomUserNotLogged.userId,\r\n            senderId: loggedUserId,\r\n        });\r\n\r\n        const getRoom = await firebase.firestore.collection(\"rooms\").where(\"roomKey\", \"==\", roomOpen).get();\r\n\r\n        getRoom.forEach(async (room) => {\r\n            await firebase.firestore.collection(\"rooms\").doc(room.id).update({\r\n                lastMessage: new Date().toISOString(),\r\n            });\r\n        });\r\n\r\n        setMessage(\"\");\r\n        setUploadedImg(\"\");\r\n        setUploadLoading(false);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setUploadLoading(true);\r\n        if (uploadedImg) {\r\n            const fileExtension = uploadedImg.name.split(\".\").pop();\r\n            const randomName = `${uuidv4()}.${fileExtension}`;\r\n            firebase.storage\r\n                .ref(`${roomOpen}/${randomName}`)\r\n                .put(uploadedImg)\r\n                .then(async (url) => {\r\n                    const downloadURL = await url.ref.getDownloadURL();\r\n                    handleSubmitMessage(downloadURL);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            handleSubmitMessage(\"\");\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit} className={`private-message-form ${uploadedImg ? \"withImg\" : \"\"} ${uploadLoading ? \"uploading-message\" : \"\"}`}>\r\n            {!uploadedImg ? (\r\n                <ImagesUpload chosenGif={null} handleUploadFile={(e) => setUploadedImg(e.target.files[0])} multiple={false} />\r\n            ) : (\r\n                <div className=\"img-upload-preview\">\r\n                    <IconButton className=\"delete-img-message\" onClick={() => setUploadedImg(\"\")} aria-label=\"delete picture\" component=\"button\">\r\n                        <CancelIcon />\r\n                    </IconButton>\r\n                    <img src={URL.createObjectURL(uploadedImg)} alt=\"\" />\r\n                </div>\r\n            )}\r\n            <div className=\"text-field-container\">\r\n                <TextField\r\n                    type=\"text\"\r\n                    placeholder=\"Start a new message\"\r\n                    value={message}\r\n                    multiline\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    className={`message-text-field ${isFocus ? \"message-text-field-focused\" : \"\"}`}\r\n                    onFocus={() => setIsFocus(true)}\r\n                    onBlur={() => setIsFocus(false)}\r\n                    disabled={uploadLoading}\r\n                    onKeyPress={(e) => handleKeyPress(e)}\r\n                />\r\n                <IconButton\r\n                    disabled={(message === \"\" && uploadedImg === \"\") || uploadLoading}\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className=\"send-message-button\"\r\n                >\r\n                    <SendIcon />\r\n                </IconButton>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\n\r\n// Material UI\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { SubmitMessage } from \"./SubmitMessage\";\r\n\r\nconst ListMessage = ({ roomOpen, firebase, loggedUserId, roomUserNotLogged }) => {\r\n    const [listMessages, setListMessages] = useState([]);\r\n\r\n    const ScrollToBottom = () => {\r\n        const elementRef = useRef();\r\n        useEffect(() => elementRef.current.scrollIntoView());\r\n        return <div ref={elementRef} />;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const messages = firebase.firestore\r\n            .collection(\"messages\")\r\n            .doc(roomOpen)\r\n            .collection(roomOpen)\r\n            .orderBy(\"createdAt\", \"asc\")\r\n            .onSnapshot((querySnapshot) => {\r\n                const messagesArr = [];\r\n                querySnapshot.forEach((doc) => {\r\n                    messagesArr.push(doc.data());\r\n                });\r\n                setListMessages(messagesArr);\r\n            });\r\n\r\n        return () => {\r\n            messages();\r\n        };\r\n    }, [roomOpen, firebase.firestore]);\r\n\r\n    return (\r\n        <Box className=\"list-messages\">\r\n            {listMessages && listMessages.length > 0 ? (\r\n                <>\r\n                    <div>\r\n                        {listMessages.map((message, key) => {\r\n                            const profilePicture = loggedUserId === message.recipientId ? roomUserNotLogged.userImage : null;\r\n                            const userLink = loggedUserId === message.recipientId ? roomUserNotLogged.userName : null;\r\n\r\n                            const classNameMsg = loggedUserId === message.senderId ? \"sender\" : \"recipient\";\r\n                            const classNameImg = message.contentImg ? \" withImg\" : \"\";\r\n                            return (\r\n                                <div className=\"single-message\" key={key}>\r\n                                    {profilePicture && userLink ? (\r\n                                        <Box display=\"flex\" alignItems=\"center\">\r\n                                            <Link to={`/user/${userLink}`}>\r\n                                                <Avatar alt={userLink} src={profilePicture} className=\"avatar\" />\r\n                                            </Link>\r\n                                            <div className={`${classNameMsg}`}>\r\n                                                <Typography component=\"span\" variant=\"body2\">\r\n                                                    {message.content}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </Box>\r\n                                    ) : (\r\n                                        <div className={`${classNameMsg} ${classNameImg} `}>\r\n                                            {message.contentImg ? <img src={message.contentImg} alt=\"\" /> : null}\r\n                                            {message.content ? (\r\n                                                <Typography component=\"span\" variant=\"body2\">\r\n                                                    {message.content}\r\n                                                </Typography>\r\n                                            ) : null}\r\n                                        </div>\r\n                                    )}\r\n                                    <Typography component=\"div\" variant=\"body2\" className={`${classNameMsg} message-date`}>\r\n                                        {dayjs(message.createdAt).format(\"H:mm A\")}\r\n                                    </Typography>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                        <ScrollToBottom />\r\n                    </div>\r\n                </>\r\n            ) : null}\r\n            <SubmitMessage firebase={firebase} roomOpen={roomOpen} roomUserNotLogged={roomUserNotLogged} loggedUserId={loggedUserId} />\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default ListMessage;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n/* Constants */\r\nimport * as ROUTES from \"./../constants/routes\";\r\n\r\n//context\r\nimport { withFirebase } from \"./../config/Firebase/context\";\r\nimport { GlobalContext } from \"./../config/GlobalState/GlobalState\";\r\nimport { withAuthorization } from \"./../config/Session\";\r\n\r\n/* Components */\r\nimport { ListPrivateMessages } from \"../components/privateMessages/ListPrivateMessages\";\r\n\r\n/* Material UI */\r\nimport Box from \"@material-ui/core/Box\";\r\nimport ListMessage from \"../components/privateMessages/ListMessage\";\r\n\r\nconst PrivateMessages = ({ firebase, match, history }) => {\r\n    const { state } = useContext(GlobalContext);\r\n\r\n    const {\r\n        user: {\r\n            credentials: { userId },\r\n        },\r\n    } = state;\r\n\r\n    const [roomOpen, setRoomOpen] = useState(\"\");\r\n    const [roomUserNotLogged, setRoomUserNotLogged] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (match.params.roomId && userId) {\r\n            if (match.params.roomId.includes(userId)) {\r\n                setRoomOpen(match.params.roomId);\r\n                const availableUser = match.params.roomId.split(\"-\");\r\n                const roomUserId = availableUser.filter((e) => e !== userId)[0];\r\n                firebase.firestore\r\n                    .collection(\"users\")\r\n                    .where(\"userId\", \"==\", roomUserId)\r\n                    .get()\r\n                    .then((res) => {\r\n                        res.forEach((element) => {\r\n                            setRoomUserNotLogged(element.data());\r\n                        });\r\n                    });\r\n            }\r\n        }\r\n    }, [match, userId, firebase.firestore]);\r\n\r\n    useEffect(() => {\r\n        if (roomOpen) {\r\n            history.push(`${ROUTES.MESSAGES}/${roomOpen}`);\r\n        }\r\n    }, [roomOpen, history]);\r\n\r\n    return (\r\n        <Box display=\"flex\" alignItems=\"align-start\">\r\n            <ListPrivateMessages loggedUserId={userId} firebase={firebase} roomOpen={roomOpen} setRoomOpen={setRoomOpen} />\r\n            {roomOpen && roomOpen !== \"\" ? (\r\n                <ListMessage roomOpen={roomOpen} firebase={firebase} loggedUserId={userId} roomUserNotLogged={roomUserNotLogged} />\r\n            ) : null}\r\n        </Box>\r\n    );\r\n};\r\n\r\nconst condition = (authUser) => !!authUser;\r\nexport default withAuthorization(condition)(withFirebase(withRouter(PrivateMessages)));\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\n/* components */\r\nimport Home from \"./views/Home\";\r\nimport Post from \"./views/Post\";\r\nimport User from \"./views/User\";\r\nimport Navigation from \"./components/layouts/Navigation\";\r\nimport { SignUp } from \"./views/SignUp\";\r\nimport SignIn from \"./views/SignIn\";\r\nimport Notifications from \"./views/Notifications\";\r\nimport PrivateMessages from \"./views/PrivateMessages\";\r\n\r\n/* context */\r\nimport GlobalProvider from \"./config/GlobalState/GlobalState\";\r\nimport { withAuthentication } from \"./config/Session\";\r\n\r\n/* Material UI*/\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\n/* routes */\r\nimport * as ROUTES from \"./constants/routes\";\r\n\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter>\r\n            <GlobalProvider>\r\n                <Navigation />\r\n                <Container maxWidth=\"lg\">\r\n                    <Switch>\r\n                        <Route exact path={ROUTES.HOME} component={Home} />\r\n                        <Route exact path={ROUTES.SIGN_UP} component={SignUp} />\r\n                        <Route exact path={ROUTES.SIGN_IN} component={SignIn} />\r\n                        <Route exact path={ROUTES.USER} component={User} />\r\n                        <Route exact path={ROUTES.POST} component={Post} />\r\n                        <Route exact path={ROUTES.NOTIFICATIONS} component={Notifications} />\r\n                        <Route exact path={ROUTES.MESSAGES} component={PrivateMessages} />\r\n                        <Route exact path={`${ROUTES.MESSAGES}/:roomId`} component={PrivateMessages} />\r\n                        <Route render={() => <Redirect to=\"/\" />} />\r\n                    </Switch>\r\n                </Container>\r\n            </GlobalProvider>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default withAuthentication(App);\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n        this.firestore = app.firestore();\r\n        this.storage = app.storage();\r\n        this.FieldValue = app.firestore.FieldValue;\r\n    }\r\n\r\n    // *** Auth API ***\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\r\n\r\n    doPasswordUpdate = (password) => this.auth.currentUser.updatePassword(password);\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext from \"./context\";\r\nimport Firebase from \"./Firebase\";\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./reset.css\";\r\n\r\nimport Firebase, { FirebaseContext } from \"./config/Firebase\";\r\n\r\nReactDOM.render(\r\n    <React.Fragment>\r\n        <FirebaseContext.Provider value={new Firebase()}>\r\n            <App />\r\n        </FirebaseContext.Provider>\r\n    </React.Fragment>,\r\n    document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}